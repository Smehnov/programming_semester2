/**
 * Class for 'help' command
 * @implements Command
 */
public class HelpCommand implements Command {

    public HelpCommand() {
        CommandExecutor.addCommand("help", this);
    }

    public void execute(String arg, MusicBandsData data) {
        System.out.println("help : вывести справку по доступным командам\n" +
                "info : вывести в стандартный поток вывода информацию о коллекции (тип, дата инициализации, количество элементов и т.д.)\n" +
                "show : вывести в стандартный поток вывода все элементы коллекции в строковом представлении\n" +
                "add : добавить новый элемент в коллекцию\n" +
                "update <id> : обновить значение элемента коллекции, id которого равен заданному\n" +
                "remove_by_id <id> : удалить элемент из коллекции по его id\n" +
                "clear : очистить коллекцию\n" +
                "save : сохранить коллекцию в файл\n" +
                "execute_script file_name : считать и исполнить скрипт из указанного файла. В скрипте содержатся команды в таком же виде, в котором их вводит пользователь в интерактивном режиме.\n" +
                "exit : завершить программу (без сохранения в файл)\n" +
                "add_if_max {element} : добавить новый элемент в коллекцию, если его значение превышает значение наибольшего элемента этой коллекции\n" +
                "add_if_min {element} : добавить новый элемент в коллекцию, если его значение меньше, чем у наименьшего элемента этой коллекции\n" +
                "remove_greater {element} : удалить из коллекции все элементы, превышающие заданный\n" +
                "sum_of_number_of_participants : вывести сумму значений поля numberOfParticipants для всех элементов коллекции\n" +
                "filter_by_number_of_participants numberOfParticipants : вывести элементы, значение поля numberOfParticipants которых равно заданному\n" +
                "filter_contains_name name : вывести элементы, значение поля name которых содержит заданную подстроку" +
                "Формат ввода команд:\n" +
                "\n" +
                "Все аргументы команды, являющиеся стандартными типами данных (примитивные типы, классы-оболочки, String, классы для хранения дат), должны вводиться в той же строке, что и имя команды.\n" +
                "Все составные типы данных (объекты классов, хранящиеся в коллекции) должны вводиться по одному полю в строку.\n" +
                "При вводе составных типов данных пользователю должно показываться приглашение к вводу, содержащее имя поля (например, \"Введите дату рождения:\")\n" +
                "Если поле является enum'ом, то вводится имя одной из его констант (при этом список констант должен быть предварительно выведен).\n" +
                "При некорректном пользовательском вводе (введена строка, не являющаяся именем константы в enum'е; введена строка вместо числа; введённое число не входит в указанные границы и т.п.) должно быть показано сообщение об ошибке и предложено повторить ввод поля.\n" +
                "Для ввода значений null использовать пустую строку.\n" +
                "Поля с комментарием \"Значение этого поля должно генерироваться автоматически\" не должны вводиться пользователем вручную при добавлении.");
    }
}

